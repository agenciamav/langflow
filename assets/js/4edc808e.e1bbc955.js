/*! For license information please see 4edc808e.e1bbc955.js.LICENSE.txt */
"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4173],{3414:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(7294),a=n(941),r=n(4996);const s=e=>{let{alt:t,sources:n,style:s}=e;const[i,c]=(0,o.useState)(!1),l=e=>{"Escape"===e.key&&c(!1)};(0,o.useEffect)((()=>(i?document.addEventListener("keydown",l):document.removeEventListener("keydown",l),()=>{document.removeEventListener("keydown",l)})),[i]);return o.createElement("div",{className:"zoomable-image "+(i?"fullscreen":""),onClick:()=>{c(!i)},style:{width:"50%",margin:"0 auto",display:"flex",justifyContent:"center",...s}},o.createElement(a.Z,{className:"zoomable-image-inner",alt:t,sources:{light:(0,r.Z)(n.light),dark:(0,r.Z)(n.dark)}}))}},474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>d});n(7294);var o=n(5893),a=n(1151),r=(n(941),n(4996),n(3414));const s={},i="\ud83d\udc4b Welcome to Langflow",c={unversionedId:"index",id:"index",title:"\ud83d\udc4b Welcome to Langflow",description:"Langflow is an easy way to prototype LangChain flows. The drag-and-drop feature allows quick and effortless experimentation, while the built-in chat interface facilitates real-time interaction. It provides options to edit prompt parameters, create chains and agents, track thought processes, and export flows.",source:"@site/docs/index.mdx",sourceDirName:".",slug:"/",permalink:"/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",next:{title:"\ud83d\udce6 How to install?",permalink:"/getting-started/installation"}},l={},d=[];function u(e){const t=Object.assign({h1:"h1",p:"p",a:"a"},(0,a.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"-welcome-to-langflow",children:"\ud83d\udc4b Welcome to Langflow"}),"\n",(0,o.jsxs)(t.p,{children:["Langflow is an easy way to prototype ",(0,o.jsx)(t.a,{href:"https://github.com/hwchase17/langchain",children:"LangChain"})," flows. The drag-and-drop feature allows quick and effortless experimentation, while the built-in chat interface facilitates real-time interaction. It provides options to edit prompt parameters, create chains and agents, track thought processes, and export flows."]}),"\n","\n","\n"," ","\n",(0,o.jsx)(r.Z,{alt:"Docusaurus themed image",sources:{light:"img/new_langflow.gif"},style:{width:"100%"}})]})}const f=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?(0,o.jsx)(t,Object.assign({},e,{children:(0,o.jsx)(u,e)})):u(e)}},5251:(e,t,n)=>{n(7418);var o=n(7294),a=60103;if(t.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var r=Symbol.for;a=r("react.element"),t.Fragment=r("react.fragment")}var s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var o,r={},l=null,d=null;for(o in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(d=t.ref),t)i.call(t,o)&&!c.hasOwnProperty(o)&&(r[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===r[o]&&(r[o]=t[o]);return{$$typeof:a,type:e,key:l,ref:d,props:r,_owner:s.current}}t.jsx=l,t.jsxs=l},5893:(e,t,n)=>{e.exports=n(5251)},1151:(e,t,n)=>{n.d(t,{Zo:()=>i,ah:()=>r});var o=n(7294);const a=o.createContext({});function r(e){const t=o.useContext(a);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const s={};function i({components:e,children:t,disableParentContext:n}){let i;return i=n?"function"==typeof e?e({}):e||s:r(e),o.createElement(a.Provider,{value:i},t)}}}]);